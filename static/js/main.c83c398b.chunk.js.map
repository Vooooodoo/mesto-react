{"version":3,"sources":["images/header__logo.svg","images/popup__tooltip-logo_name_success.svg","images/popup__tooltip-logo_name_error.svg","components/ProtectedRoute.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/CardDeletePopup.js","components/ImagePopup.js","components/InfoTooltip.js","components/SuccessTooltip.js","components/ErrorTooltip.js","components/Authentication.js","components/Register.js","components/Login.js","components/Footer.js","components/Spinner.js","utils/Api.js","utils/mestoAuth.js","contexts/CardsContext.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","props","loggedIn","to","Header","className","src","headerLogo","alt","children","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","item","cardLikeButtonClassName","link","name","onClick","onCardClick","type","aria-label","onCardDelete","onCardLike","length","Main","history","useHistory","userData","localStorage","removeItem","push","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","PopupWithForm","id","isOpen","slice","indexOf","onSubmit","title","btnText","ariaLabel","onClose","EditAvatarPopup","inputRef","useRef","isLoading","ref","placeholder","required","evt","preventDefault","onUpdateAvatar","current","value","EditProfilePopup","useState","setName","description","setDescription","useEffect","defaultValue","onChange","target","minLength","maxLength","pattern","onUpdateUser","AddPlacePopup","nameInputRef","linkInputRef","CardDeletPopup","ImagePopup","openedPopupClass","cardLink","cardName","InfoTooltip","tooltipLogo","tooltipLogoAlt","tooltipText","SuccessTooltip","ErrorTooltip","Authentication","onSubmitButton","onEmailInput","onPasswordInput","subBtnText","linkRoute","linkText","Register","Login","Footer","Spinner","api","baseUrl","headers","this","_baseUrl","_headers","url","options","body","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","_fetch","method","cardId","authorization","BASE_URL","CardsContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isCardDeletePopupOpen","setIsCardDeletePopupOpen","isSuccessTooltipOpen","setIsSuccessTooltipOpen","isErrorTooltipOpen","setIsErrorTooltipOpen","setTooltiptext","setIsLoading","isPopupLoading","setIsPopupLoading","selectedCard","setSelectedCard","selectedForDeleteCard","setSelectedForDeleteCard","setCurrentUser","initialCards","setCards","setLoggedIn","userEmail","setUserEmail","email","setEmail","password","setPassword","closeAllPopups","handleEmailChange","handlePasswordChange","checkToken","token","jwt","getItem","Accept","Authorization","Error","error","data","catch","console","log","get","result","finally","handleEsc","document","addEventListener","removeEventListener","handleOverlayClick","classList","contains","Provider","exact","path","changeCardLikeStatus","newCard","newCards","mestoAuth","setItem","avatarLink","patch","userInfo","cardInfo","post","CardDeletePopup","delete","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c83c398b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header__logo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/popup__tooltip-logo_name_success.75df9ada.svg\";","module.exports = __webpack_public_path__ + \"static/media/popup__tooltip-logo_name_error.db56ee32.svg\";","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n//* этот HOC-компонент принимает другой компонент в качестве пропса\r\n//* он также может взять неограниченное число пропсов и передать их новому компоненту\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => (props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />)\r\n      }\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport headerLogo from '../images/header__logo.svg';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип Место Россия.\" />\r\n      {props.children}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n//* встроенный метод React.createContext вернёт новый объект контекста\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  //* подпишемся на контекст CurrentUserContext\r\n  //* в переменной currentUser окажется значения пропса value провайдера контекста из App.js\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  //* определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  //* если мы являемся владельцем - показать кнопку удаления карточки\r\n  const cardDeleteButtonClassName = (\r\n    `card__trash ${isOwn ? 'card__trash_show' : 'card__trash_hide'}`\r\n  );\r\n\r\n  //* определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some((item) => item._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `card__like ${isLiked ? 'card__like_active' : 'card__like_inactive'}`\r\n  );\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <img className=\"card__photo\" src={props.card.link} alt={`${props.card.name}.`} onClick={handleClick} />\r\n      <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить место.\" onClick={handleDeleteClick}></button>\r\n      <div className=\"card__container\">\r\n        <h2 className=\"card__title\">{props.card.name}</h2>\r\n        <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Лайкнуть место.\" onClick={handleLikeClick}></button>\r\n      </div>\r\n      <p className=\"card__like-quantity\">{props.card.likes.length}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  //* подпишемся на контекст CurrentUserContext,\r\n  //* в переменной currentUser окажется значения пропса value провайдера контекста из App.js\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  function signOut() {\r\n    localStorage.removeItem('jwt');\r\n    history.push('/sign-in');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        children={\r\n          <div>\r\n            <p className=\"header__text\">{props.userData}</p>\r\n            <button className=\"header__button header__text\" type=\"button\" onClick={signOut}>Выйти</button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      <main className=\"content\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__container\" onClick={props.onEditAvatar}>\r\n            <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"\" />\r\n            <button className=\"profile__avatar-button\" type=\"button\" aria-label=\"Обновить аватар.\"></button>\r\n          </div>\r\n\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль.\" onClick={props.onEditProfile}></button>\r\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n          </div>\r\n\r\n          <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить новое место.\" onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n        <section className=\"cards\">\r\n          {/* осуществим рэндер начальных карточек с помощью цикла map и данных из массива cards */}\r\n          <ul className=\"cards__list\"> {/* правила React требуют задавать ключи при работе со списками, они нужны для корректной работы движка */}\r\n            {props.cards.map((card) => (\r\n              (<Card\r\n                card={card}\r\n                key={card._id}\r\n                onCardClick={props.onCardClick}\r\n                onCardLike={props.onCardLike}\r\n                onCardDelete={props.onCardDelete}\r\n              />)\r\n            ))}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div id={props.id} className={props.isOpen ? 'popup popup_opened' : 'popup popup_closed'}> {/* если пропс isOpen примет значние true - добавить класс отображения попапа, если false - скрыть */}\r\n      <form name={props.id.slice(0, props.id.indexOf('-'))} className=\"popup__form-container\" onSubmit={props.onSubmit}>\r\n        <h3 className=\"popup__form-title\">{props.title}</h3>\r\n        {props.children}\r\n        <button className=\"popup__submit popup__submit_valid\" type=\"submit\">{props.btnText}</button>\r\n        <button className=\"popup__close popup__close_type_form-popup\" type=\"button\" aria-label={props.ariaLabel} onClick={props.onClose}></button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  //* записываем объект, возвращаемый хуком, в переменную,\r\n  //* в которой окажется DOM-элемент с атрибутом ref\r\n  const inputRef = React.useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onUpdateAvatar({\r\n      //* получаем значение инпута с помощью рефа и свойства value,\r\n      //* затем передаем его во внешний обработчик handleUpdateAvatar\r\n      avatar: inputRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      id=\"avatar-popup\"\r\n      title=\"Обновить аватар\"\r\n      btnText={props.isLoading ? 'Сохранение...' : 'Сохранить'}\r\n      ariaLabel=\"Закрыть форму обновления аватара.\"\r\n      children={\r\n        <fieldset className=\"popup__fieldset\">\r\n          <input id=\"avatar-popup-input-link\" name=\"link\" className=\"popup__input-text\" ref={inputRef} type=\"url\" placeholder=\"Ссылка на новый аватар\" required /> {/* указали элементу атрибут ref и получили прямой доступ к DOM-элементу */}\r\n          <span id=\"avatar-popup-input-link-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n        </fieldset>\r\n      }\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={props.isLoading}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  //* после загрузки текущего пользователя из API,\r\n  //* его данные будут использованы в управляемых компонентах\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault(); //* запретили браузеру переходить по адресу формы\r\n\r\n    //* передадим значения управляемых компонентов во внешний обработчик handleUpdateUser,\r\n    //* который находится App.js\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      id=\"edit-popup\"\r\n      title=\"Редактировать профиль\"\r\n      btnText={props.isLoading ? 'Сохранение...' : 'Сохранить'}\r\n      ariaLabel=\"Закрыть форму редактирования профиля.\"\r\n      children={\r\n        <fieldset className=\"popup__fieldset\">\r\n          <input id=\"edit-popup-input-name\" name=\"name\" className=\"popup__input-text\" type=\"text\" defaultValue={name} onChange={handleNameChange} placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" pattern=\"^[А-Яа-яЁёa-zA-Z\\s\\-]+$\" required />\r\n          <span id=\"edit-popup-input-name-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n          <input id=\"edit-popup-input-about\" name=\"about\" className=\"popup__input-text\" type=\"text\" defaultValue={description} onChange={handleDescriptionChange} placeholder=\"О себе\" minLength=\"2\" maxLength=\"400\" required />\r\n          <span id=\"edit-popup-input-about-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n        </fieldset>\r\n      }\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={props.isLoading}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  //* записываем объект, возвращаемый хуком, в переменную,\r\n  //* в которой окажется DOM-элемент с атрибутом ref\r\n  const nameInputRef = React.useRef();\r\n  const linkInputRef = React.useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      //* получаем значение инпута с помощью рефа и свойства value,\r\n      //* затем передадим его во внешний обработчик handleAddPlaceSubmit\r\n      name: nameInputRef.current.value,\r\n      link: linkInputRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      id=\"add-popup\"\r\n      title=\"Новое место\"\r\n      btnText={props.isLoading ? 'Создать...' : 'Создать'}\r\n      ariaLabel=\"Закрыть форму добавления нового места.\"\r\n      children={\r\n        <fieldset className=\"popup__fieldset\">\r\n          <input id=\"add-popup-input-name\" name=\"name\" className=\"popup__input-text\" ref={nameInputRef} type=\"text\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\r\n          <span id=\"add-popup-input-name-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n          <input id=\"add-popup-input-link\" name=\"link\" className=\"popup__input-text\" ref={linkInputRef} type=\"url\" placeholder=\"Ссылка на картинку\" required />\r\n          <span id=\"add-popup-input-link-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n        </fieldset>\r\n      }\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction CardDeletPopup(props) {\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onCardDelete();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      id=\"card-delete-popup\"\r\n      title=\"Вы уверены?\"\r\n      btnText={props.isLoading ? 'Удаление...' : 'Да'}\r\n      ariaLabel=\"Закрыть попап подтверждения удаления карточки.\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CardDeletPopup;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  let openedPopupClass;\r\n  let cardLink;\r\n  let cardName;\r\n\r\n  if (props.card) {\r\n    openedPopupClass = 'popup_opened';\r\n    cardLink = props.card.link;\r\n    cardName = props.card.name;\r\n  }\r\n\r\n  return (\r\n    <div id=\"photo-popup\" className={`popup popup_closed ${openedPopupClass}`}>\r\n      <div className=\"popup__photo-container\">\r\n        <img className=\"popup__photo\" src={cardLink} alt={`${cardName}.`} />\r\n        <h2 className=\"popup__photo-title\">{cardName}</h2>\r\n        <button className=\"popup__close popup__close_type_photo-popup\" type=\"button\" aria-label=\"Закрыть окно с фотографией.\" onClick={props.onClose}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n  return (\r\n    <div className={props.isOpen ? 'popup popup_opened' : 'popup popup_closed'}>\r\n      <div className=\"popup__form-container\">\r\n        <img className=\"popup__tooltip-logo\" src={props.tooltipLogo} alt={props.tooltipLogoAlt} />\r\n        <p className=\"popup__tooltip-text\">{props.tooltipText}</p>\r\n        <button className=\"popup__close popup__close_type_form-popup\" type=\"button\" aria-label=\"Закрыть окно с подсказкой.\" onClick={props.onClose}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from 'react';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport tooltipLogo from '../images/popup__tooltip-logo_name_success.svg';\r\n\r\nfunction SuccessTooltip(props) {\r\n  return (\r\n    <InfoTooltip\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      tooltipLogo={tooltipLogo}\r\n      tooltipText={props.tooltipText}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SuccessTooltip;\r\n","import React from 'react';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport tooltipLogo from '../images/popup__tooltip-logo_name_error.svg';\r\n\r\nfunction ErrorTooltip(props) {\r\n  return (\r\n    <InfoTooltip\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      tooltipLogo={tooltipLogo}\r\n      tooltipText=\"Что-то пошло не так! Попробуйте ещё раз.\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErrorTooltip;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Authentication(props) {\r\n  return (\r\n    <form className=\"authentication\" onSubmit={props.onSubmitButton}>\r\n      <h3 className=\"authentication__title\">{props.title}</h3>\r\n      <fieldset className=\"authentication__fieldset\">\r\n        <input className=\"authentication__input\" type=\"email\" onChange={props.onEmailInput} placeholder=\"Email\" minLength=\"2\" maxLength=\"40\" required />\r\n        <input className=\"authentication__input\" type=\"password\" onChange={props.onPasswordInput} placeholder=\"Пароль\" minLength=\"2\" maxLength=\"40\" required />\r\n      </fieldset>\r\n      <button className=\"authentication__submit\" type=\"submit\">{props.btnText}</button>\r\n      <div className=\"authentication__wrapper\">\r\n        <p className=\"authentication__text\">{props.subBtnText}</p>\r\n        <Link className=\"authentication__link\" to={props.linkRoute}>{props.linkText}</Link>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Authentication;\r\n","import React from 'react';\r\nimport Authentication from './Authentication';\r\n\r\nfunction Register(props) {\r\n  return (\r\n    <Authentication\r\n      title=\"Регистрация\"\r\n      btnText=\"Зарегистрироваться\"\r\n      subBtnText=\"Уже зарегистрированы?\"\r\n      linkText=\"Войти\"\r\n      linkRoute=\"/sign-in\"\r\n      onSubmitButton={props.onSubmitButton}\r\n      onEmailInput={props.onEmailInput}\r\n      onPasswordInput={props.onPasswordInput}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Authentication from './Authentication';\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <Authentication\r\n      title=\"Вход\"\r\n      btnText=\"Войти\"\r\n      subBtnText=\"Ещё не зарегистрированы?\"\r\n      linkText=\"Регистрация\"\r\n      linkRoute=\"/sign-up\"\r\n      onSubmitButton={props.onSubmitButton}\r\n      onEmailInput={props.onEmailInput}\r\n      onPasswordInput={props.onPasswordInput}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy;&nbsp;2020. Андруханенко Роман</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <span></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","//* класс Api необходим для работы с API и выполнения запросов к серверу\r\n\r\n// CLASS\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _fetch(url, options) {\r\n    //* если в опциях будет body, добавить свойство с преобразованием объекта JSON в строку,\r\n    //* для будущей передачи на сервер\r\n    if (options.body) {\r\n      options.body = JSON.stringify(options.body);\r\n    }\r\n\r\n    options.headers = this._headers;\r\n\r\n    //* метод fetch создаёт запрос на сервер и возвращает его ответ,\r\n    //* вторым аргументом передадим объект опций\r\n    return fetch(this._baseUrl + url, options)\r\n      .then((res) => {\r\n        if (res.ok) { //* если запрос прошёл успешно\r\n          //* асинхронный метод json читает ответ от сервера в формате json и возвращает промис,\r\n          //* из которого можно достать нужные данные через обработчик then\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`${res.status}`); //* если сервер вернул ошибку, отклонили промис, чтобы перейти в блок catch\r\n      });\r\n  }\r\n\r\n  //* метод для получения данных с сервера\r\n  get(url) {\r\n    return this._fetch(url, {\r\n      method: 'GET',\r\n    });\r\n  }\r\n\r\n  //* метод для обновления сущностей, уже существующих на сервере,\r\n  //* например информации о пользователе\r\n  patch(url, body) {\r\n    //* при вызове метода, вместо параметра body подставим объект с данными,\r\n    //* которые требуется передать на сервер\r\n    return this._fetch(url, {\r\n      method: 'PATCH',\r\n      body,\r\n    });\r\n  }\r\n\r\n  //* метод для для отправки данных на сервер\r\n  post(url, body) {\r\n    return this._fetch(url, {\r\n      method: 'POST',\r\n      body,\r\n    });\r\n  }\r\n\r\n  //* метод для удаления ресурса с сервера\r\n  delete(url) {\r\n    return this._fetch(url, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  //* метод для полного обновления указанного ресурса\r\n  put(url) {\r\n    return this._fetch(url, {\r\n      method: 'PUT',\r\n    });\r\n  }\r\n\r\n  changeCardLikeStatus(cardId, isLiked) {\r\n    return this._fetch(`/cards/likes/${cardId}`, {\r\n      method: isLiked ? 'DELETE' : 'PUT',\r\n    });\r\n  }\r\n}\r\n\r\n// API INSTANCE\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n    authorization: 'da3ea697-f11c-42f5-89fc-193a981f7278',\r\n    'Content-Type': 'application/json'\r\n  },\r\n});\r\n\r\nexport default api;\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport function register(email, password) { //* функция для регистрации новых пользователей\r\n  return fetch(`${BASE_URL}/signup`, { //* эндпоинт на стороне сервера\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }) //* запостили значения инпутов формы на сервер\r\n\r\n    //* получим объект, который содержит информацию об ответе и статус ответа\r\n    .then((res) => res.json())\r\n\r\n    //* получим объект, который содержит данные пользователя (которые он ввёл в форму регистрации),\r\n    //* адрес запроса и уникальный подписанный JWT-токен\r\n    .then((res) => res);\r\n}\r\n\r\nexport function authorize(email, password) { //* функция для авторизации новых пользователей\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n\r\n    .then((res) => res.json())\r\n\r\n    .then((data) => {\r\n      //* если в полученном с сервера объекте есть свойство token,\r\n      //* сохранить его значени в локальном хранилище браузера\r\n      if (data.token) {\r\n        localStorage.setItem('jwt', data.token);\r\n        return data;\r\n      }\r\n    });\r\n}\r\n\r\n//* функция для проверки токенов авторизованных пользователей, которые вернулись в приложение\r\nexport function getContent(token) {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n\r\n    .then((res) => {\r\n      try {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n        if (res.status === 400) {\r\n          throw new Error('Токен не передан или передан не в том формате');\r\n        }\r\n        if (res.status === 401) {\r\n          throw new Error('Переданный токен некорректен');\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    })\r\n\r\n    .then((data) => data);\r\n}\r\n","import React from 'react';\r\n\r\n//* встроенный метод React.createContext вернёт новый объект контекста\r\nexport const CardsContext = React.createContext();\r\n","import React from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  useHistory,\r\n  Link,\r\n} from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport CardDeletePopup from './CardDeletePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport SuccessTooltip from './SuccessTooltip';\r\nimport ErrorTooltip from './ErrorTooltip';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport Footer from './Footer';\r\nimport Spinner from './Spinner';\r\nimport api from '../utils/Api';\r\nimport * as mestoAuth from '../utils/mestoAuth';\r\n//* импортируем новые объекты контекста\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { CardsContext } from '../contexts/CardsContext';\r\n\r\nfunction App() {\r\n  //* хуки, управляющие внутренним состоянием, начальное значение false\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\r\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = React.useState(false);\r\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = React.useState(false);\r\n\r\n  const [tooltipText, setTooltiptext] = React.useState('');\r\n\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [isPopupLoading, setIsPopupLoading] = React.useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState();\r\n  const [selectedForDeleteCard, setSelectedForDeleteCard] = React.useState();\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [initialCards, setCards] = React.useState([]);\r\n\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [userEmail, setUserEmail] = React.useState('');\r\n\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsCardDeletePopupOpen(false);\r\n    setIsSuccessTooltipOpen(false);\r\n    setIsErrorTooltipOpen(false);\r\n    setSelectedCard();\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    //* изменим значение переменной внутреннего состояния на true, с помощью функции-сэттера\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleCardDeleteClick(card) {\r\n    setSelectedForDeleteCard(card);\r\n    setIsCardDeletePopupOpen(true);\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    //* проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((owner) => owner._id === currentUser._id);\r\n\r\n    api.changeCardLikeStatus(card._id, isLiked)\r\n      //* отправляем запрос в API на добавление или удаление лайка в зависимости от isLiked\r\n      //* и получаем обновлённые данные карточки\r\n      .then((newCard) => {\r\n        //* сформируем новый массив карточек на основе имеющегося, подставив в него новую карточку\r\n        const newCards = initialCards.map((item) => (item._id === card._id ? newCard : item));\r\n\r\n        setCards(newCards); //* обновили переменную состояния и интерфейс изменился автоматически\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete() {\r\n    setIsPopupLoading(true);\r\n\r\n    api.delete(`/cards/${selectedForDeleteCard._id}`)\r\n      .then(() => {\r\n        //* сформируем новый массив карточек на основе имеющегося,\r\n        //* исключив из него удалённую карточку\r\n        const newCards = initialCards.filter((item) => (item._id !== selectedForDeleteCard._id ? true : false));\r\n\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      })\r\n\r\n      .finally(() => {\r\n        setIsPopupLoading(false);\r\n      });\r\n  }\r\n\r\n  function handleUpdateUser(userInfo) {\r\n    setIsPopupLoading(true);\r\n\r\n    api.patch('/users/me', userInfo) //* обновили на сервере информацию о пользователе, полученную из формы\r\n      //* eсли запрос выполнен успешно, сработает обработчик then с описанием последующих действий\r\n      .then((result) => {\r\n        setCurrentUser(result); //* result - это объект на сервере с информацией о пользователе\r\n\r\n        closeAllPopups();\r\n      }) //* получили обратно информацию с сервера и добавили её на страницу\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      }) //* если что-то пошло не так, — например, отвалился интернет — сработает catch\r\n\r\n      .finally(() => {\r\n        setIsPopupLoading(false);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar(avatarLink) {\r\n    setIsPopupLoading(true);\r\n\r\n    api.patch('/users/me/avatar', avatarLink) //* обновили на сервере ссылку на аватар, полученную из формы\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n\r\n        closeAllPopups();\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      })\r\n\r\n      .finally(() => {\r\n        setIsPopupLoading(false);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(cardInfo) {\r\n    setIsPopupLoading(true);\r\n\r\n    api.post('/cards', cardInfo) //* добавили на сервере информацию о новой карточке, полученную из формы\r\n      //* result - это возвращаемый с сервера объект, в котором хранится информация о новой карточке\r\n      .then((result) => {\r\n        //* обновим стейт intialCards с помощью,\r\n        //* расширенной за счёт добавления новой карточки, копии текущего массива\r\n        setCards([result, ...initialCards]);\r\n\r\n        closeAllPopups();\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      })\r\n\r\n      .finally(() => {\r\n        setIsPopupLoading(false);\r\n      });\r\n  }\r\n\r\n  function handleLogin() {\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  //* обработчики инпутов форм регистрации и авторизации\r\n  function handleEmailChange(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleRegisterSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    //* в качестве аргументов передадим переменные состояния, в которых значения инпутов формы\r\n    mestoAuth.register(email, password)\r\n      .then((res) => {\r\n        //* если форма отправлена успешно, перенаправить пользователя на страницу авторизации\r\n        if (res) {\r\n          history.push('/sign-in');\r\n          setTooltiptext('Вы успешно зарегистрировались!');\r\n          setIsSuccessTooltipOpen(true);\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      });\r\n  }\r\n\r\n  function handleLoginSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      return;\r\n    }\r\n\r\n    mestoAuth.authorize(email, password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setUserEmail(email);\r\n          setEmail('');\r\n          setPassword('');\r\n\r\n          handleLogin();\r\n          history.push('/');\r\n          setTooltiptext('Авторизация прошла успешно!');\r\n          setIsSuccessTooltipOpen(true);\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      });\r\n  }\r\n\r\n  //* если у пользователя есть токен в localStorage, эта функция проверит валидность токена\r\n  function checkToken() {\r\n    const jwt = localStorage.getItem('jwt');\r\n\r\n    if (jwt) {\r\n      mestoAuth.getContent(jwt)\r\n        .then((res) => {\r\n          if (res) {\r\n            setUserEmail(res.data.email);\r\n            setLoggedIn(true);\r\n            history.push('/');\r\n          }\r\n        })\r\n\r\n        .catch((error) => {\r\n          setIsErrorTooltipOpen(true);\r\n          console.log('Ошибка. Запрос не выполнен:', error);\r\n        });\r\n    }\r\n  }\r\n\r\n  //* хук с побочным эффектом, который будет вызван когда компонент будет смонтирован или обновлён\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    api.get('/users/me')\r\n      //* eсли запрос выполнен успешно, сработает обработчик then с описанием последующих действий\r\n      //* как получим с сервера информацию - передадим её в соответствующую переменную состояния\r\n      .then((result) => {\r\n        //* result - это объект на сервере с информацией о пользователе\r\n        setCurrentUser(result);\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      })\r\n\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n\r\n    api.get('/cards')\r\n      //* result - это полученный с сервера массив объектов с данными всех карточек\r\n      .then((result) => {\r\n        //* урезали result до шести карточек и записали этот массив в переменную состояния cards\r\n        setCards(result.slice(0, 6));\r\n      })\r\n\r\n      .catch((error) => {\r\n        setIsErrorTooltipOpen(true);\r\n        console.log('Ошибка. Запрос не выполнен:', error);\r\n      })\r\n\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n  //* вторым аргументом функции передали зависимость с пустым массивом,\r\n  //* чтобы эффект был вызван всего один раз, при монтировании компонента\r\n\r\n  React.useEffect(() => {\r\n    function handleEsc(evt) {\r\n      if (evt.key === 'Escape') {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n\r\n    //* добавим лисенер при монтировании компонента,\r\n    //* стэйт которого указан в массиве зависимостей этого хука\r\n    document.addEventListener('keydown', handleEsc);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEsc); //* удалили лисенер при размонтировании компонента\r\n    };\r\n  },\r\n  [\r\n    isEditAvatarPopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isAddPlacePopupOpen,\r\n    isCardDeletePopupOpen,\r\n    isSuccessTooltipOpen,\r\n    isErrorTooltipOpen,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    function handleOverlayClick(evt) {\r\n      if (evt.target.classList.contains('popup')) { //* если клик произошел по оверлею - закрыть попап\r\n        closeAllPopups();\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleOverlayClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleOverlayClick);\r\n    };\r\n  },\r\n  [\r\n    isEditAvatarPopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isAddPlacePopupOpen,\r\n    isCardDeletePopupOpen,\r\n    isSuccessTooltipOpen,\r\n    isErrorTooltipOpen,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    checkToken();\r\n  }, [localStorage]);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}> {/* с помощью провайдера контекста распространили значение пропса value по всему дереву дочерних компонентов */}\r\n      <CardsContext.Provider value={initialCards}>\r\n        <Switch>\r\n          {isLoading\r\n            ? <Spinner />\r\n            : <ProtectedRoute\r\n                exact path=\"/\"\r\n                component={Main}\r\n                loggedIn={loggedIn}\r\n                userData={userEmail}\r\n                cards={initialCards}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDeleteClick}\r\n              />\r\n          }\r\n\r\n          <Route path=\"/sign-up\">\r\n            <Header children={<Link to=\"/sign-in\" className=\"header__link header__text\">Войти</Link>}/>\r\n            <Register\r\n              onSubmitButton={handleRegisterSubmit}\r\n              onEmailInput={handleEmailChange}\r\n              onPasswordInput={handlePasswordChange}\r\n            />\r\n          </Route>\r\n\r\n          <Route path=\"/sign-in\">\r\n            <Header children={<Link to=\"/sign-up\" className=\"header__link header__text\">Регистрация</Link>}/>\r\n            <Login\r\n              onSubmitButton={handleLoginSubmit}\r\n              onEmailInput={handleEmailChange}\r\n              onPasswordInput={handlePasswordChange}\r\n            />\r\n          </Route>\r\n\r\n          <Route>\r\n            {loggedIn ? <Redirect to='/' /> : <Redirect to='/sign-in' />} {/* перенаправили пользователя на определённый путь в зависимости от статуса его авторизации */}\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          isLoading={isPopupLoading}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          isLoading={isPopupLoading}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n          isLoading={isPopupLoading}\r\n        />\r\n        <CardDeletePopup\r\n          isOpen={isCardDeletePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onCardDelete={handleCardDelete}\r\n          isLoading={isPopupLoading}\r\n        />\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <SuccessTooltip\r\n          isOpen={isSuccessTooltipOpen}\r\n          onClose={closeAllPopups}\r\n          tooltipText={tooltipText}\r\n        />\r\n        <ErrorTooltip\r\n          isOpen={isErrorTooltipOpen}\r\n          onClose={closeAllPopups}\r\n        />\r\n      </CardsContext.Provider>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  (<React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>),\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}