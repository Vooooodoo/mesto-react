{"version":3,"sources":["images/header__logo.svg","images/popup__tooltip-logo_name_success.svg","images/popup__tooltip-logo_name_error.svg","components/ProtectedRoute.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/CardDeletePopup.js","components/ImagePopup.js","components/InfoTooltip.js","components/SuccessTooltip.js","components/ErrorTooltip.js","components/Authentication.js","components/Register.js","components/Login.js","components/Footer.js","components/Spinner.js","utils/Api.js","utils/mestoAuth.js","contexts/CardsContext.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","props","loggedIn","to","Header","pathname","useLocation","linkText","linkPath","className","src","headerLogo","alt","userData","type","onClick","onEscapeButton","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","item","cardLikeButtonClassName","link","name","onCardClick","aria-label","onCardDelete","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","PopupWithForm","id","isOpen","slice","indexOf","onSubmit","title","children","btnText","ariaLabel","onClose","EditAvatarPopup","inputRef","useRef","isLoading","ref","placeholder","required","evt","preventDefault","onUpdateAvatar","current","value","EditProfilePopup","useState","setName","description","setDescription","useEffect","defaultValue","onChange","target","minLength","maxLength","pattern","onUpdateUser","AddPlacePopup","nameInputRef","linkInputRef","CardDeletPopup","ImagePopup","openedPopupClass","cardLink","cardName","InfoTooltip","tooltipLogo","tooltipLogoAlt","tooltipText","SuccessTooltip","ErrorTooltip","Authentication","onSubmitButton","onEmailInput","onPasswordInput","subBtnText","linkRoute","Register","email","setEmail","password","setPassword","Login","Footer","Spinner","api","baseUrl","headers","this","_baseUrl","_headers","url","options","body","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","_fetch","method","cardId","authorization","BASE_URL","CardsContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isCardDeletePopupOpen","setIsCardDeletePopupOpen","isSuccessTooltipOpen","setIsSuccessTooltipOpen","isErrorTooltipOpen","setIsErrorTooltipOpen","setIsLoading","isPopupLoading","setIsPopupLoading","selectedCard","setSelectedCard","selectedForDeleteCard","setSelectedForDeleteCard","setCurrentUser","initialCards","setCards","setLoggedIn","userEmail","setUserEmail","setTooltiptext","history","useHistory","closeAllPopups","checkToken","token","jwt","localStorage","getItem","Accept","Authorization","Error","error","data","push","catch","console","log","get","result","finally","handleEsc","document","addEventListener","removeEventListener","handleOverlayClick","classList","contains","Provider","removeItem","exact","path","changeCardLikeStatus","newCard","newCards","mestoAuth","setItem","avatarLink","patch","userInfo","cardInfo","post","CardDeletePopup","delete","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e628fca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header__logo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/popup__tooltip-logo_name_success.75df9ada.svg\";","module.exports = __webpack_public_path__ + \"static/media/popup__tooltip-logo_name_error.db56ee32.svg\";","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n//* этот HOC-компонент принимает другой компонент в качестве пропса\r\n//* он также может взять неограниченное число пропсов и передать их новому компоненту\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => (props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />)\r\n      }\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport headerLogo from '../images/header__logo.svg';\n\nfunction Header(props) {\n  const { pathname } = useLocation();\n\n  const linkText = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\n  const linkPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\n\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип Место Россия.\" />\n      {props.loggedIn\n        ? (<div>\n            <p className=\"header__text\">{props.userData}</p>\n            <button className=\"header__button header__text\" type=\"button\" onClick={props.onEscapeButton}>Выйти</button>\n          </div>)\n\n        : (<Link to={linkPath} className=\"header__link header__text\">{linkText}</Link>)\n      }\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\n\r\n//* встроенный метод React.createContext вернёт новый объект контекста\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  //* подпишемся на контекст CurrentUserContext\r\n  //* в переменной currentUser окажется значения пропса value провайдера контекста из App.js\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  //* определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  //* если мы являемся владельцем - показать кнопку удаления карточки\r\n  const cardDeleteButtonClassName = (\r\n    `card__trash ${isOwn ? 'card__trash_show' : 'card__trash_hide'}`\r\n  );\r\n\r\n  //* определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some((item) => item._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `card__like ${isLiked ? 'card__like_active' : 'card__like_inactive'}`\r\n  );\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <img className=\"card__photo\" src={props.card.link} alt={`${props.card.name}.`} onClick={handleClick} />\r\n      <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить место.\" onClick={handleDeleteClick}></button>\r\n      <div className=\"card__container\">\r\n        <h2 className=\"card__title\">{props.card.name}</h2>\r\n        <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Лайкнуть место.\" onClick={handleLikeClick}></button>\r\n      </div>\r\n      <p className=\"card__like-quantity\">{props.card.likes.length}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  //* подпишемся на контекст CurrentUserContext,\n  //* в переменной currentUser окажется значения пропса value провайдера контекста из App.js\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <>\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__container\" onClick={props.onEditAvatar}>\n            <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"\" />\n            <button className=\"profile__avatar-button\" type=\"button\" aria-label=\"Обновить аватар.\"></button>\n          </div>\n\n          <div className=\"profile__info\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль.\" onClick={props.onEditProfile}></button>\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\n          </div>\n\n          <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить новое место.\" onClick={props.onAddPlace}></button>\n        </section>\n\n        <section className=\"cards\">\n          {/* осуществим рэндер начальных карточек с помощью цикла map и данных из массива cards */}\n          <ul className=\"cards__list\"> {/* правила React требуют задавать ключи при работе со списками, они нужны для корректной работы движка */}\n            {props.cards.map((card) => (\n              (<Card\n                card={card}\n                key={card._id}\n                onCardClick={props.onCardClick}\n                onCardLike={props.onCardLike}\n                onCardDelete={props.onCardDelete}\n              />)\n            ))}\n          </ul>\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div id={props.id} className={props.isOpen ? 'popup popup_opened' : 'popup popup_closed'}> {/* если пропс isOpen примет значние true - добавить класс отображения попапа, если false - скрыть */}\r\n      <form name={props.id.slice(0, props.id.indexOf('-'))} className=\"popup__form-container\" onSubmit={props.onSubmit}>\r\n        <h3 className=\"popup__form-title\">{props.title}</h3>\r\n        {props.children}\r\n        <button className=\"popup__submit popup__submit_valid\" type=\"submit\">{props.btnText}</button>\r\n        <button className=\"popup__close popup__close_type_form-popup\" type=\"button\" aria-label={props.ariaLabel} onClick={props.onClose}></button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  //* записываем объект, возвращаемый хуком, в переменную,\n  //* в которой окажется DOM-элемент с атрибутом ref\n  const inputRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    props.onUpdateAvatar({\n      //* получаем значение инпута с помощью рефа и свойства value,\n      //* затем передаем его во внешний обработчик handleUpdateAvatar в App.js\n      avatar: inputRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      id=\"avatar-popup\"\n      title=\"Обновить аватар\"\n      btnText={props.isLoading ? 'Сохранение...' : 'Сохранить'}\n      ariaLabel=\"Закрыть форму обновления аватара.\"\n      children={\n        <fieldset className=\"popup__fieldset\">\n          <input id=\"avatar-popup-input-link\" name=\"link\" className=\"popup__input-text\" ref={inputRef} type=\"url\" placeholder=\"Ссылка на новый аватар\" required /> {/* указали элементу атрибут ref и получили прямой доступ к DOM-элементу */}\n          <span id=\"avatar-popup-input-link-error\" className=\"popup__input-error popup__input-error_hide\"></span>\n        </fieldset>\n      }\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n    />\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  //* после загрузки текущего пользователя из API,\n  //* его данные будут использованы в управляемых компонентах\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault(); //* запретили браузеру переходить по адресу формы\n\n    //* передадим значения управляемых компонентов во внешний обработчик handleUpdateUser,\n    //* который находится в App.js\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      id=\"edit-popup\"\n      title=\"Редактировать профиль\"\n      btnText={props.isLoading ? 'Сохранение...' : 'Сохранить'}\n      ariaLabel=\"Закрыть форму редактирования профиля.\"\n      children={\n        <fieldset className=\"popup__fieldset\">\n          <input id=\"edit-popup-input-name\" name=\"name\" className=\"popup__input-text\" type=\"text\" defaultValue={name} onChange={handleNameChange} placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" pattern=\"^[А-Яа-яЁёa-zA-Z\\s\\-]+$\" required />\n          <span id=\"edit-popup-input-name-error\" className=\"popup__input-error popup__input-error_hide\"></span>\n          <input id=\"edit-popup-input-about\" name=\"about\" className=\"popup__input-text\" type=\"text\" defaultValue={description} onChange={handleDescriptionChange} placeholder=\"О себе\" minLength=\"2\" maxLength=\"400\" required />\n          <span id=\"edit-popup-input-about-error\" className=\"popup__input-error popup__input-error_hide\"></span>\n        </fieldset>\n      }\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n    />\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  //* записываем объект, возвращаемый хуком, в переменную,\r\n  //* в которой окажется DOM-элемент с атрибутом ref\r\n  const nameInputRef = React.useRef();\r\n  const linkInputRef = React.useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      //* получаем значение инпута с помощью рефа и свойства value,\r\n      //* затем передадим его во внешний обработчик handleAddPlaceSubmit\r\n      name: nameInputRef.current.value,\r\n      link: linkInputRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      id=\"add-popup\"\r\n      title=\"Новое место\"\r\n      btnText={props.isLoading ? 'Создать...' : 'Создать'}\r\n      ariaLabel=\"Закрыть форму добавления нового места.\"\r\n      children={\r\n        <fieldset className=\"popup__fieldset\">\r\n          <input id=\"add-popup-input-name\" name=\"name\" className=\"popup__input-text\" ref={nameInputRef} type=\"text\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\r\n          <span id=\"add-popup-input-name-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n          <input id=\"add-popup-input-link\" name=\"link\" className=\"popup__input-text\" ref={linkInputRef} type=\"url\" placeholder=\"Ссылка на картинку\" required />\r\n          <span id=\"add-popup-input-link-error\" className=\"popup__input-error popup__input-error_hide\"></span>\r\n        </fieldset>\r\n      }\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction CardDeletPopup(props) {\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onCardDelete();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      id=\"card-delete-popup\"\r\n      title=\"Вы уверены?\"\r\n      btnText={props.isLoading ? 'Удаление...' : 'Да'}\r\n      ariaLabel=\"Закрыть попап подтверждения удаления карточки.\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CardDeletPopup;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  let openedPopupClass;\r\n  let cardLink;\r\n  let cardName;\r\n\r\n  if (props.card) {\r\n    openedPopupClass = 'popup_opened';\r\n    cardLink = props.card.link;\r\n    cardName = props.card.name;\r\n  }\r\n\r\n  return (\r\n    <div id=\"photo-popup\" className={`popup popup_closed ${openedPopupClass}`}>\r\n      <div className=\"popup__photo-container\">\r\n        <img className=\"popup__photo\" src={cardLink} alt={`${cardName}.`} />\r\n        <h2 className=\"popup__photo-title\">{cardName}</h2>\r\n        <button className=\"popup__close popup__close_type_photo-popup\" type=\"button\" aria-label=\"Закрыть окно с фотографией.\" onClick={props.onClose}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n  return (\r\n    <div className={props.isOpen ? 'popup popup_opened' : 'popup popup_closed'}>\r\n      <div className=\"popup__form-container\">\r\n        <img className=\"popup__tooltip-logo\" src={props.tooltipLogo} alt={props.tooltipLogoAlt} />\r\n        <p className=\"popup__tooltip-text\">{props.tooltipText}</p>\r\n        <button className=\"popup__close popup__close_type_form-popup\" type=\"button\" aria-label=\"Закрыть окно с подсказкой.\" onClick={props.onClose}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from 'react';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport tooltipLogo from '../images/popup__tooltip-logo_name_success.svg';\r\n\r\nfunction SuccessTooltip(props) {\r\n  return (\r\n    <InfoTooltip\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      tooltipLogo={tooltipLogo}\r\n      tooltipText={props.tooltipText}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SuccessTooltip;\r\n","import React from 'react';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport tooltipLogo from '../images/popup__tooltip-logo_name_error.svg';\r\n\r\nfunction ErrorTooltip(props) {\r\n  return (\r\n    <InfoTooltip\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      tooltipLogo={tooltipLogo}\r\n      tooltipText=\"Что-то пошло не так! Попробуйте ещё раз.\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErrorTooltip;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Authentication(props) {\r\n  return (\r\n    <form className=\"authentication\" onSubmit={props.onSubmitButton}>\r\n      <h3 className=\"authentication__title\">{props.title}</h3>\r\n      <fieldset className=\"authentication__fieldset\">\r\n        <input className=\"authentication__input\" type=\"email\" onChange={props.onEmailInput} placeholder=\"Email\" minLength=\"2\" maxLength=\"40\" required />\r\n        <input className=\"authentication__input\" type=\"password\" onChange={props.onPasswordInput} placeholder=\"Пароль\" minLength=\"2\" maxLength=\"40\" required />\r\n      </fieldset>\r\n      <button className=\"authentication__submit\" type=\"submit\">{props.btnText}</button>\r\n      <div className=\"authentication__wrapper\">\r\n        <p className=\"authentication__text\">{props.subBtnText}</p>\r\n        <Link className=\"authentication__link\" to={props.linkRoute}>{props.linkText}</Link>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Authentication;\r\n","import React from 'react';\nimport Authentication from './Authentication';\n\nfunction Register(props) {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleEmailChange(evt) {\n    setEmail(evt.target.value);\n  }\n\n  function handlePasswordChange(evt) {\n    setPassword(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    props.onSubmitButton(email, password);\n  }\n\n  return (\n    <Authentication\n      title=\"Регистрация\"\n      btnText=\"Зарегистрироваться\"\n      subBtnText=\"Уже зарегистрированы?\"\n      linkText=\"Войти\"\n      linkRoute=\"/sign-in\"\n      onSubmitButton={handleSubmit}\n      onEmailInput={handleEmailChange}\n      onPasswordInput={handlePasswordChange}\n    />\n  );\n}\n\nexport default Register;\n","import React from 'react';\nimport Authentication from './Authentication';\n\nfunction Login(props) {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleEmailChange(evt) {\n    setEmail(evt.target.value);\n  }\n\n  function handlePasswordChange(evt) {\n    setPassword(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    props.onSubmitButton(email, password);\n  }\n\n  return (\n    <Authentication\n      title=\"Вход\"\n      btnText=\"Войти\"\n      subBtnText=\"Ещё не зарегистрированы?\"\n      linkText=\"Регистрация\"\n      linkRoute=\"/sign-up\"\n      onSubmitButton={handleSubmit}\n      onEmailInput={handleEmailChange}\n      onPasswordInput={handlePasswordChange}\n    />\n  );\n}\n\nexport default Login;\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy;&nbsp;2020. Андруханенко Роман</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <span></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","//* класс Api необходим для работы с API и выполнения запросов к серверу\r\n\r\n// CLASS\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _fetch(url, options) {\r\n    //* если в опциях будет body, добавить свойство с преобразованием объекта JSON в строку,\r\n    //* для будущей передачи на сервер\r\n    if (options.body) {\r\n      options.body = JSON.stringify(options.body);\r\n    }\r\n\r\n    options.headers = this._headers;\r\n\r\n    //* метод fetch создаёт запрос на сервер и возвращает его ответ,\r\n    //* вторым аргументом передадим объект опций\r\n    return fetch(this._baseUrl + url, options)\r\n      .then((res) => {\r\n        if (res.ok) { //* если запрос прошёл успешно\r\n          //* асинхронный метод json читает ответ от сервера в формате json и возвращает промис,\r\n          //* из которого можно достать нужные данные через обработчик then\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`${res.status}`); //* если сервер вернул ошибку, отклонили промис, чтобы перейти в блок catch\r\n      });\r\n  }\r\n\r\n  //* метод для получения данных с сервера\r\n  get(url) {\r\n    return this._fetch(url, {\r\n      method: 'GET',\r\n    });\r\n  }\r\n\r\n  //* метод для обновления сущностей, уже существующих на сервере,\r\n  //* например информации о пользователе\r\n  patch(url, body) {\r\n    //* при вызове метода, вместо параметра body подставим объект с данными,\r\n    //* которые требуется передать на сервер\r\n    return this._fetch(url, {\r\n      method: 'PATCH',\r\n      body,\r\n    });\r\n  }\r\n\r\n  //* метод для для отправки данных на сервер\r\n  post(url, body) {\r\n    return this._fetch(url, {\r\n      method: 'POST',\r\n      body,\r\n    });\r\n  }\r\n\r\n  //* метод для удаления ресурса с сервера\r\n  delete(url) {\r\n    return this._fetch(url, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  //* метод для полного обновления указанного ресурса\r\n  put(url) {\r\n    return this._fetch(url, {\r\n      method: 'PUT',\r\n    });\r\n  }\r\n\r\n  changeCardLikeStatus(cardId, isLiked) {\r\n    return this._fetch(`/cards/likes/${cardId}`, {\r\n      method: isLiked ? 'DELETE' : 'PUT',\r\n    });\r\n  }\r\n}\r\n\r\n// API INSTANCE\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n    authorization: 'da3ea697-f11c-42f5-89fc-193a981f7278',\r\n    'Content-Type': 'application/json'\r\n  },\r\n});\r\n\r\nexport default api;\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport function register(email, password) { //* функция для регистрации новых пользователей\r\n  return fetch(`${BASE_URL}/signup`, { //* эндпоинт на стороне сервера\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }) //* запостили значения инпутов формы на сервер\r\n\r\n    //* получим объект, который содержит информацию об ответе и статус ответа\r\n    .then((res) => res.json())\r\n\r\n    //* получим объект, который содержит данные пользователя (которые он ввёл в форму регистрации),\r\n    //* адрес запроса и уникальный подписанный JWT-токен\r\n    .then((res) => res);\r\n}\r\n\r\nexport function authorize(email, password) { //* функция для авторизации новых пользователей\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n\r\n    .then((res) => res.json())\r\n\r\n    .then((data) => {\r\n      //* если в полученном с сервера объекте есть свойство token,\r\n      //* сохранить его значени в локальном хранилище браузера\r\n      if (data.token) {\r\n        localStorage.setItem('jwt', data.token);\r\n        return data;\r\n      }\r\n    });\r\n}\r\n\r\n//* функция для проверки токенов авторизованных пользователей, которые вернулись в приложение\r\nexport function getContent(token) {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n\r\n    .then((res) => {\r\n      try {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n        if (res.status === 400) {\r\n          throw new Error('Токен не передан или передан не в том формате');\r\n        }\r\n        if (res.status === 401) {\r\n          throw new Error('Переданный токен некорректен');\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    })\r\n\r\n    .then((data) => data);\r\n}\r\n","import React from 'react';\r\n\r\n//* встроенный метод React.createContext вернёт новый объект контекста\r\nexport const CardsContext = React.createContext();\r\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Header from './Header';\nimport Main from './Main';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport CardDeletePopup from './CardDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport SuccessTooltip from './SuccessTooltip';\nimport ErrorTooltip from './ErrorTooltip';\nimport Register from './Register';\nimport Login from './Login';\nimport Footer from './Footer';\nimport Spinner from './Spinner';\nimport api from '../utils/Api';\nimport * as mestoAuth from '../utils/mestoAuth';\n//* импортируем новые объекты контекста\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\n\nfunction App() {\n  //* хуки, управляющие внутренним состоянием, начальное значение false\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = React.useState(false);\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = React.useState(false);\n\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isPopupLoading, setIsPopupLoading] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [selectedForDeleteCard, setSelectedForDeleteCard] = React.useState();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [initialCards, setCards] = React.useState([]);\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userEmail, setUserEmail] = React.useState('');\n\n  const [tooltipText, setTooltiptext] = React.useState('');\n\n  const history = useHistory();\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsCardDeletePopupOpen(false);\n    setIsSuccessTooltipOpen(false);\n    setIsErrorTooltipOpen(false);\n    setSelectedCard();\n  }\n\n  function handleEditAvatarClick() {\n    //* изменим значение переменной внутреннего состояния на true, с помощью функции-сэттера\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardDeleteClick(card) {\n    setSelectedForDeleteCard(card);\n    setIsCardDeletePopupOpen(true);\n  }\n\n  function handleCardLike(card) {\n    //* проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((owner) => owner._id === currentUser._id);\n\n    api.changeCardLikeStatus(card._id, isLiked)\n      //* отправляем запрос в API на добавление или удаление лайка в зависимости от isLiked\n      //* и получаем обновлённые данные карточки\n      .then((newCard) => {\n        //* сформируем новый массив карточек на основе имеющегося, подставив в него новую карточку\n        const newCards = initialCards.map((item) => (item._id === card._id ? newCard : item));\n\n        setCards(newCards); //* обновили переменную состояния и интерфейс изменился автоматически\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      }); //* если что-то пошло не так, — например, отвалился интернет — сработает catch\n  }\n\n  function handleCardDelete() {\n    setIsPopupLoading(true);\n\n    api.delete(`/cards/${selectedForDeleteCard._id}`)\n      .then(() => {\n        //* сформируем новый массив карточек на основе имеющегося,\n        //* исключив из него удалённую карточку\n        const newCards = initialCards.filter((item) => (item._id !== selectedForDeleteCard._id ? true : false));\n\n        setCards(newCards);\n        closeAllPopups();\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      })\n\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  }\n\n  function handleUpdateUser(userInfo) {\n    setIsPopupLoading(true);\n\n    api.patch('/users/me', userInfo) //* обновили на сервере информацию о пользователе, полученную из формы\n      //* eсли запрос выполнен успешно, сработает обработчик then с описанием последующих действий\n      .then((result) => {\n        setCurrentUser(result); //* result - это объект на сервере с информацией о пользователе\n\n        closeAllPopups();\n      }) //* получили обратно информацию с сервера и добавили её на страницу\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      })\n\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  }\n\n  function handleUpdateAvatar(avatarLink) {\n    setIsPopupLoading(true);\n\n    api.patch('/users/me/avatar', avatarLink) //* обновили на сервере ссылку на аватар, полученную из формы\n      .then((result) => {\n        setCurrentUser(result);\n\n        closeAllPopups();\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      })\n\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  }\n\n  function handleAddPlaceSubmit(cardInfo) {\n    setIsPopupLoading(true);\n\n    api.post('/cards', cardInfo) //* добавили на сервере информацию о новой карточке, полученную из формы\n      //* result - это возвращаемый с сервера объект, в котором хранится информация о новой карточке\n      .then((result) => {\n        //* обновим стейт intialCards с помощью,\n        //* расширенной за счёт добавления новой карточки, копии текущего массива\n        setCards([result, ...initialCards]);\n\n        closeAllPopups();\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      })\n\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  }\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  function handleRegisterSubmit(email, password) {\n    //* в качестве аргументов передадим переменные состояния, в которых значения инпутов формы\n    mestoAuth.register(email, password)\n      .then((res) => {\n        //* если форма отправлена успешно, перенаправить пользователя на страницу авторизации\n        if (res) {\n          history.push('/sign-in');\n          setTooltiptext('Вы успешно зарегистрировались!');\n          setIsSuccessTooltipOpen(true);\n        }\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      });\n  }\n\n  function handleLoginSubmit(email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    mestoAuth.authorize(email, password)\n      .then((data) => {\n        if (data.token) {\n          setUserEmail(email);\n          handleLogin();\n          history.push('/');\n          setTooltiptext('Авторизация прошла успешно!');\n          setIsSuccessTooltipOpen(true);\n        }\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      });\n  }\n\n  //* если у пользователя есть токен в localStorage, эта функция проверит валидность токена\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      mestoAuth.getContent(jwt)\n        .then((res) => {\n          if (res) {\n            setUserEmail(res.data.email);\n            setLoggedIn(true);\n            history.push('/');\n          }\n        })\n\n        .catch((error) => {\n          setIsErrorTooltipOpen(true);\n          console.log('Ошибка. Запрос не выполнен:', error);\n        });\n    }\n  }\n\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n  }\n\n  //* хук с побочным эффектом, который будет вызван когда компонент будет смонтирован или обновлён\n  React.useEffect(() => {\n    setIsLoading(true);\n\n    api.get('/users/me')\n      //* eсли запрос выполнен успешно, сработает обработчик then с описанием последующих действий\n      //* как получим с сервера информацию - передадим её в соответствующую переменную состояния\n      .then((result) => {\n        //* result - это объект на сервере с информацией о пользователе\n        setCurrentUser(result);\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      })\n\n      .finally(() => {\n        setIsLoading(false);\n      });\n\n    api.get('/cards')\n      //* result - это полученный с сервера массив объектов с данными всех карточек\n      .then((result) => {\n        //* урезали result до шести карточек и записали этот массив в переменную состояния cards\n        setCards(result.slice(0, 6));\n      })\n\n      .catch((error) => {\n        setIsErrorTooltipOpen(true);\n        console.log('Ошибка. Запрос не выполнен:', error);\n      })\n\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n  //* вторым аргументом функции передали зависимость с пустым массивом,\n  //* чтобы эффект был вызван всего один раз, при монтировании компонента\n\n  React.useEffect(() => {\n    function handleEsc(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    //* добавим лисенер при монтировании компонента,\n    //* стэйт которого указан в массиве зависимостей этого хука\n    document.addEventListener('keydown', handleEsc);\n\n    return () => {\n      document.removeEventListener('keydown', handleEsc); //* удалили лисенер при размонтировании компонента\n    };\n  },\n  [\n    isEditAvatarPopupOpen,\n    isEditProfilePopupOpen,\n    isAddPlacePopupOpen,\n    isCardDeletePopupOpen,\n    isSuccessTooltipOpen,\n    isErrorTooltipOpen,\n  ]);\n\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains('popup')) { //* если клик произошел по оверлею - закрыть попап\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('click', handleOverlayClick);\n\n    return () => {\n      document.removeEventListener('click', handleOverlayClick);\n    };\n  },\n  [\n    isEditAvatarPopupOpen,\n    isEditProfilePopupOpen,\n    isAddPlacePopupOpen,\n    isCardDeletePopupOpen,\n    isSuccessTooltipOpen,\n    isErrorTooltipOpen,\n  ]);\n\n  React.useEffect(() => {\n    checkToken();\n  });\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    {/* с помощью провайдера контекста распространили значение пропса value */}\n    {/* по всему дереву дочерних компонентов */}\n      <CardsContext.Provider value={initialCards}>\n      {isLoading\n        ? <Spinner />\n        : <>\n            <Header\n              loggedIn={loggedIn}\n              userData={userEmail}\n              onEscapeButton={handleSignOut}\n            />\n            <Switch>\n              <ProtectedRoute\n                exact path=\"/\"\n                component={Main}\n                loggedIn={loggedIn}\n                cards={initialCards}\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDeleteClick}\n              />\n\n              <Route path=\"/sign-up\">\n                <Register onSubmitButton={handleRegisterSubmit}/>\n              </Route>\n\n              <Route path=\"/sign-in\">\n                <Login onSubmitButton={handleLoginSubmit}/>\n              </Route>\n\n              <Route>\n                {loggedIn ? <Redirect to='/' /> : <Redirect to='/sign-in' />}\n                {/* перенаправили пользователя на путь, в зависимости от статуса его авторизации */}\n              </Route>\n            </Switch>\n            <Footer />\n\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n              isLoading={isPopupLoading}\n            />\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              isLoading={isPopupLoading}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n              isLoading={isPopupLoading}\n            />\n            <CardDeletePopup\n              isOpen={isCardDeletePopupOpen}\n              onClose={closeAllPopups}\n              onCardDelete={handleCardDelete}\n              isLoading={isPopupLoading}\n            />\n            <ImagePopup\n              card={selectedCard}\n              onClose={closeAllPopups}\n            />\n            <SuccessTooltip\n              isOpen={isSuccessTooltipOpen}\n              onClose={closeAllPopups}\n              tooltipText={tooltipText}\n            />\n            <ErrorTooltip\n              isOpen={isErrorTooltipOpen}\n              onClose={closeAllPopups}\n            />\n        </>\n      }\n      </CardsContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  (<React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>),\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}